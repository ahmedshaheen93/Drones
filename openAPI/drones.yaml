openapi: 3.0.3
info:
  title: drones
  description: |
    service allowed developing countries to leapfrog older technologies for personal communication,
    the drone has the potential to leapfrog traditional transportation infrastructure.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/api/v1'
    description: localhost server
tags:
  - name: drones
paths:
  /drones:
    post:
      summary: register a drone
      operationId: addADrone
      tags:
        - drones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DroneAddRequest'

      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroneResponse'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      summary: list drones info
      operationId: listDrones
      tags:
        - drones
      parameters:
        - in: query
          name: state
          required: true
          schema:
            $ref: '#/components/schemas/DroneState'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DroneResponse'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'

  /drones/{id}/medications:
    post:
      description: |
        loading a drone with medication items
      operationId: addMedications
      tags:
        - drones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: drone id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MedicationRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationResponse'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      description: |
        A drone medication items info
      operationId: loadMedicationInfo
      tags:
        - drones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: drone id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationResponse'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'

  /drones/{id}:
    get:
      description: |
        list a drone info
      operationId: getDroneById
      tags:
        - drones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: drone id
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroneResponse'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'



components:
  schemas:

    DroneAddRequest:
      type: object
      description: |
        the drone request
      allOf:
        - $ref: '#/components/schemas/Drone'

    DroneResponse:
      type: object
      description: |
        the drone response
      allOf:
        - type: object
          properties:
            id:
              description: |
                the drone id
              type: integer
        - $ref: '#/components/schemas/Drone'

    Drone:
      type: object
      description: |
        the drone model
      properties:
        serialNumber:
          description: |
            the drone serial number
          type: string
          maxLength: 100
          minLength: 1
        model:
          description: |
            the drone model
          type: string
          enum:
            - Lightweight
            - Middleweight
            - Cruiserweight
            - Heavyweight
        weightLimit:
          description: |
            the drone weight limit
          type: number
          maximum: 500
          minimum: 1
        batteryCapacity:
          description: |
            the drone battery capacity in percentage
          type: integer
          maximum: 100
          minimum: 1
        state:
          $ref: '#/components/schemas/DroneState'
    MedicationResponse:
      type: object
      allOf:
        - type: object
          properties:
            id:
              description: |
                the medication id
              type: integer
        - $ref: '#/components/schemas/MedicationItem'

    MedicationRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/MedicationItem'
    MedicationItem:
      type: object
      description: |
        the Medication info
      properties:
        name:
          type: string
          description: |
            the medication name (allowed only letters, numbers, ‘-‘, ‘_’)
          pattern: ^[A-Za-z0-9_\-]+
        weight:
          type: number
          description: |
            the medication weight in gm
          minimum: .5
          maximum: 500
        code:
          type: string
          description: |
            the medication code (allowed only upper case letters, underscore and numbers);
          pattern: ^[A-Z0-9_]+
        image:
          type: string
          description: |
            the picture of the medication case (in base64 representation).

    DroneState:
      description: |
        the drone state
      type: string
      enum:
        - IDLE
        - LOADING
        - LOADED
        - DELIVERING
        - DELIVERED
        - RETURNING

    ErrorDetails:
      type: object
      required:
        - code
        - message
      properties:
        date:
          type: string
          format: datetime
        status:
          type: string
        error:
          type: string
        uri:
          type: string
        message:
          type: string
